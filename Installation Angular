<!-- @format -->

1, npm i @angular/cli -g
2, type i cmd 'ng version' to verify the version

-------------------------Create Application------------------------------

For all CLI command: -https://angular.io/cli

To create empty workspace:
-ng new "WorkspaceName" --skip-install

To create templated Application:
-ng new "your-app-name"

Install angular language service for intelesense:
-Angular Language Service (Extension)

Create Component:
-ng g(generate) c(component) (name of your component) = ng g c samplename

Create Services
-ng g(generate) s(service) (name of service) =
ng g s samplename

-------------------------Add Bootsrap----------------
Go to https://valor-software.com/ngx-bootstrap/#/documentation

Install bootsrap in your local project:
-ng add ngx-bootstrap

After installion
-add bootsrapmin.css
-add bootsrapmin.css in "STYLE.SCSS" or add this to angular.json

--------------------------Add material design-------------------------
Go to https://material.angular.io/
-ng add @angular/material

## after installation

-------------------------Debugging--------------------
-go to Developer Tools (Ctrl-Shift-i) of Chrome ,click 3 dots , look for 'More Tools' then click rendering
-Install extention in google chrome 'Angular Dev Tools'

-------------------------Create Environment folder for API--------------
-ng generate environments

--------------------------Proxy for back end to consume API---------------- -https://angular.io/guide/build#proxying-to-a-backend-server

-------------------------------Create Interceptor for HTTP to get header request---------

-ng g interceptor (sampename)
-after that register it to app module

--------------------------------Set up Router----------------------
-Import router module in app module

**\*\***\***\*\***--------------------------FORMS-------------------**\*\*\*\***\*\*\*\***\*\*\*\***

-TEMPLATE DRIVEN FORMS
1, import FormsModule

-REACTIVE FORMS

-CREATE DIRECTIVES
ng g d (name)

-Reactive forms
Import ReactiveFormsModule

--Nest formgroup
Use formGroupName to for nest formGroup (14:21) hrs
https://www.youtube.com/watch?v=3qBXWUpoPHo&t=23765s

-------------------------------------------MODULE-------------------------------------------
-Create Module
ng g m (name) --routings

**\*\*\*\***\*\*\*\***\*\*\*\***\*\***\*\*\*\***\*\*\*\***\*\*\*\***DEPLOYMENT\***\*\*\*\*\***\*\*\***\*\*\*\*\***\*\*\***\*\*\*\*\***\*\*\***\*\*\*\*\***
ng build -c=production

-LAZY LOADING
1, Isolote all components that is related to each other , and exclude reusable components

-Create Command for lazy loading
ng g n (name) --route==Student --routing --module=app (module that need to implement lazy loading)

if you dont want to refactor it
ng g m Search // Create Module
ng g c Search //Create Component
-Note it will automatically register then Search component to Search Module
